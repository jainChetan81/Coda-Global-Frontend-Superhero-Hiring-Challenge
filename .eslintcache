[{"F:\\WebD\\Projects\\coda-betting-challenge\\src\\index.js":"1","F:\\WebD\\Projects\\coda-betting-challenge\\src\\App.js":"2","F:\\WebD\\Projects\\coda-betting-challenge\\src\\Router\\ReactRouter.js":"3","F:\\WebD\\Projects\\coda-betting-challenge\\src\\Router\\routes.js":"4","F:\\WebD\\Projects\\coda-betting-challenge\\src\\Container\\NotFound.js":"5","F:\\WebD\\Projects\\coda-betting-challenge\\src\\Container\\Dashboard.js":"6","F:\\WebD\\Projects\\coda-betting-challenge\\src\\components\\Form.js":"7","F:\\WebD\\Projects\\coda-betting-challenge\\src\\components\\Spinner\\Spinner.js":"8","F:\\WebD\\Projects\\coda-betting-challenge\\src\\hoc\\Auxillary.js":"9","F:\\WebD\\Projects\\coda-betting-challenge\\src\\components\\Players.js":"10","F:\\WebD\\Projects\\coda-betting-challenge\\src\\components\\Player.js":"11","F:\\WebD\\Projects\\coda-betting-challenge\\src\\components\\MetaPanel.js":"12","F:\\WebD\\Projects\\coda-betting-challenge\\src\\Container\\OpposingBet.js":"13","F:\\WebD\\Projects\\coda-betting-challenge\\src\\utils\\localStorage.js":"14","F:\\WebD\\Projects\\coda-betting-challenge\\src\\components\\PlayerCard\\PLayerCard.js":"15","F:\\WebD\\Projects\\coda-betting-challenge\\src\\components\\PlayerCard\\PlayerCard.js":"16"},{"size":251,"mtime":1610863963837,"results":"17","hashOfConfig":"18"},{"size":276,"mtime":1610863472462,"results":"19","hashOfConfig":"18"},{"size":973,"mtime":1610880789162,"results":"20","hashOfConfig":"18"},{"size":402,"mtime":1610879469595,"results":"21","hashOfConfig":"18"},{"size":380,"mtime":1610864221131,"results":"22","hashOfConfig":"18"},{"size":2805,"mtime":1610888922682,"results":"23","hashOfConfig":"18"},{"size":486,"mtime":1610869140452,"results":"24","hashOfConfig":"18"},{"size":156,"mtime":1610863564852,"results":"25","hashOfConfig":"18"},{"size":72,"mtime":1610863778212,"results":"26","hashOfConfig":"18"},{"size":3514,"mtime":1610888090126,"results":"27","hashOfConfig":"18"},{"size":7202,"mtime":1610890299508,"results":"28","hashOfConfig":"18"},{"size":2727,"mtime":1610890157315,"results":"29","hashOfConfig":"18"},{"size":4233,"mtime":1610892817851,"results":"30","hashOfConfig":"18"},{"size":782,"mtime":1610880010078,"results":"31","hashOfConfig":"18"},{"size":3669,"mtime":1610891849318,"results":"32","hashOfConfig":"18"},{"size":3669,"mtime":1610891849318,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1qpgmfz",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},"F:\\WebD\\Projects\\coda-betting-challenge\\src\\index.js",[],["69","70"],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\App.js",[],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\Router\\ReactRouter.js",[],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\Router\\routes.js",[],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\Container\\NotFound.js",[],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\Container\\Dashboard.js",["71"],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\components\\Form.js",[],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\components\\Spinner\\Spinner.js",[],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\hoc\\Auxillary.js",[],["72","73"],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\components\\Players.js",[],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\components\\Player.js",["74","75"],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\components\\MetaPanel.js",["76","77","78"],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\Container\\OpposingBet.js",["79"],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\utils\\localStorage.js",[],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\components\\PlayerCard\\PLayerCard.js",[],"F:\\WebD\\Projects\\coda-betting-challenge\\src\\components\\PlayerCard\\PlayerCard.js",["80"],"import { Grid } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n    getFromStorage,\r\n    removeFromStorage,\r\n    setInStorage,\r\n} from \"../../utils/localStorage\";\r\n\r\nfunction PlayerCard({ opposingBet, selectedPlayers }) {\r\n    const [newSelectedPlayers, setNewSelectedPlayers] = useState([\r\n        ...selectedPlayers,\r\n    ]);\r\n\r\n    const checkForVictory = (player) => {\r\n        const storedSelectedPlayers = getFromStorage(\"SelectedPlayers\");\r\n        const storedAllPlayers = getFromStorage(\"AllPlayers\");\r\n        removeFromStorage(\"SelectedPlayers\");\r\n        removeFromStorage(\"AllPlayers\");\r\n        const isLargeNumber = (element) => element.Name === player.Name;\r\n        const idSelected = storedSelectedPlayers.findIndex(isLargeNumber);\r\n        const idAll = storedAllPlayers.findIndex(isLargeNumber);\r\n        storedSelectedPlayers.splice(idSelected, 1);\r\n        storedAllPlayers.splice(idAll, 1);\r\n        if (player.Bet === opposingBet.toString()) {\r\n            player.Wins += 1;\r\n            player.Price = player.Price + 100;\r\n        }\r\n        if (player.Bet !== opposingBet.toString()) {\r\n            player.Lost += 1;\r\n            player.Price = player.Price - 100;\r\n        }\r\n        storedSelectedPlayers.splice(idSelected, 0, player);\r\n        storedAllPlayers.splice(idAll, 0, player);\r\n        setInStorage(\"SelectedPlayers\", storedSelectedPlayers);\r\n        setInStorage(\"AllPlayers\", storedAllPlayers);\r\n        // setNewSelectedPlayers(storedSelectedPlayers);\r\n        return null;\r\n    };\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={4}\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"baseline\">\r\n            {newSelectedPlayers?.map((player) => (\r\n                <Grid item xs key={player.Name}>\r\n                    {checkForVictory(player)}\r\n                    <div\r\n                        className={`card border border-4 ${\r\n                            player.Bet === opposingBet.toString()\r\n                                ? \"border-success\"\r\n                                : \"border-danger\"\r\n                        }`}\r\n                        style={{ width: \"14rem\", height: \"20rem\" }}>\r\n                        <img\r\n                            src={player[\"Profile Image\"]}\r\n                            style={{ height: 150 }}\r\n                            className=\"card-img-top p-1\"\r\n                            alt={player.Name}\r\n                        />\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{player.Name}</h5>\r\n                            <p className=\"card-text\">\r\n                                {`Price: ${player.Price} Bet: ${player.Bet}`}\r\n                                <br />\r\n                                {`Wins: ${player.Wins}`}\r\n                            </p>\r\n                            <p\r\n                                className={`lead text-center ${\r\n                                    player.Bet === opposingBet.toString()\r\n                                        ? \"bg-success\"\r\n                                        : \"bg-danger\"\r\n                                }`}>\r\n                                <b>\r\n                                    {player.Bet === opposingBet.toString()\r\n                                        ? \"Winner\"\r\n                                        : \"Lose\"}\r\n                                </b>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}\r\nexport default PlayerCard;\r\n",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":16,"nodeType":"87","messageId":"88","endLine":1,"endColumn":24},{"ruleId":"81","replacedBy":"89"},{"ruleId":"83","replacedBy":"90"},{"ruleId":"85","severity":1,"message":"91","line":64,"column":21,"nodeType":"87","messageId":"88","endLine":64,"endColumn":31},{"ruleId":"85","severity":1,"message":"92","line":77,"column":15,"nodeType":"87","messageId":"88","endLine":77,"endColumn":26},{"ruleId":"85","severity":1,"message":"93","line":9,"column":8,"nodeType":"87","messageId":"88","endLine":9,"endColumn":16},{"ruleId":"85","severity":1,"message":"94","line":10,"column":8,"nodeType":"87","messageId":"88","endLine":10,"endColumn":24},{"ruleId":"85","severity":1,"message":"95","line":11,"column":8,"nodeType":"87","messageId":"88","endLine":11,"endColumn":23},{"ruleId":"85","severity":1,"message":"96","line":53,"column":13,"nodeType":"87","messageId":"88","endLine":53,"endColumn":18},{"ruleId":"85","severity":1,"message":"97","line":10,"column":32,"nodeType":"87","messageId":"88","endLine":10,"endColumn":53},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Snackbar' is defined but never used.","Identifier","unusedVar",["98"],["99"],"'setPlayers' is assigned a value but never used.","'probability' is assigned a value but never used.","'CakeIcon' is defined but never used.","'HighlightOffIcon' is defined but never used.","'AttachMoneyIcon' is defined but never used.","'order' is assigned a value but never used.","'setNewSelectedPlayers' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]